generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MatchInteraction {
  id        String   @id @default(cuid())
  userId    String
  matchId   String
  status    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  match     User     @relation("MatchInteractions", fields: [matchId], references: [id])
  user      User     @relation("UserInteractions", fields: [userId], references: [id])

  @@unique([userId, matchId])
}

model Message {
  id         String   @id @default(cuid())
  content    String
  senderId   String
  receiverId String
  createdAt  DateTime @default(now())
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
  sender     User     @relation("SentMessages", fields: [senderId], references: [id])
}

model User {
  id                  String             @id @default(cuid())
  name                String?
  email               String             @unique
  password            String
  companyName         String?
  companyType         String?
  industry            String?
  location            String?
  description         String?
  website             String?
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  isVerified          Boolean            @default(false)
  lockedUntil         DateTime?
  loginAttempts       Int                @default(0)
  mfaEnabled          Boolean            @default(false)
  mfaSecret           String?
  verificationToken   String?
  matchedInteractions MatchInteraction[] @relation("MatchInteractions")
  interactions        MatchInteraction[] @relation("UserInteractions")
  receivedMessages    Message[]          @relation("ReceivedMessages")
  sentMessages        Message[]          @relation("SentMessages")
}

enum Role {
  SME
  LargeCorporation
  Admin
}
