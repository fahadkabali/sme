// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MatchInteraction {
  id        String   @id @default(cuid())
  userId    String
  matchId   String
  status    String   // e.g., "interested", "not interested", "contacted"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user  User  @relation("UserInteractions", fields: [userId], references: [id])
  match User  @relation("MatchInteractions", fields: [matchId], references: [id])

  @@unique([userId, matchId])
}

model Message {
  id        String   @id @default(cuid())
  content   String
  senderId  String
  receiverId String
  createdAt DateTime @default(now())

  sender    User     @relation("SentMessages", fields: [senderId], references: [id])
  receiver  User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
}


model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  companyName   String?
  companyType   String?
  industry      String?
  location      String?
  description   String?
  website       String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  interactions       MatchInteraction[] @relation("UserInteractions")
  matchedInteractions MatchInteraction[] @relation("MatchInteractions")
  sentMessages     Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")
  mfaEnabled    Boolean @default(false)
  mfaSecret     String?
  loginAttempts Int     @default(0)
  lockedUntil   DateTime?
}

enum Role {
  SME
  LargeCorporation
  Admin
}